{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/tableColumns.js","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.styled.js","components/App/App.jsx","index.js","theme/index.js"],"names":["StyledSection","Title","Section","title","children","FeedbackOptions","options","onLeaveFeedback","gutter","map","btn","className","span","block","onClick","columns","dataIndex","key","Statistics","props","data","dataSource","pagination","bordered","Notification","text","Container","buttonsOption","good","neutral","bad","App","useState","setGood","setNeutral","setBad","getTotalFeedback","isFeedbacks","Object","keys","name","total","positivePercentage","Math","round","getPositivePercentage","ReactDOM","render","StrictMode","theme","colors","black","document","getElementById"],"mappings":"qQAEO,IAAMA,EAAa,qFAIbC,EAAK,oH,QCFH,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACJ,EAAD,WACGG,GAAS,cAACF,EAAD,UAAQE,IACjBC,K,8BCHQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,cAAC,IAAD,CAAwBC,UAAU,aAAaC,KAAM,EAArD,SACE,cAAC,IAAD,CAASC,OAAK,EAACC,QAAS,kBAAMP,EAAgBG,IAA9C,SACGA,KAFL,UAAaA,EAAb,c,sBCTKK,EAAU,CACrB,CACEZ,MAAO,OACPa,UAAW,OACXC,IAAK,QAEP,CACEd,MAAO,UACPa,UAAW,UACXC,IAAK,WAEP,CACEd,MAAO,MACPa,UAAW,MACXC,IAAK,OAEP,CACEd,MAAO,QACPa,UAAW,QACXC,IAAK,SAEP,CACEd,MAAO,oBACPa,UAAW,qBACXC,IAAK,uBCjBM,SAASC,EAAWC,GACjC,IAAMC,EAAO,CAAC,aAEVH,IAAK,KACFE,IAIP,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,cAAC,IAAD,CACEG,QAASA,EACTM,WAAYD,EACZE,YAAY,EACZC,UAAQ,QCtBH,SAASC,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACrC,OAAO,4BAAIA,ICCN,IAAMC,EAAS,iHCMhBC,EAAgB,CACpBC,KAAM,OACNC,QAAS,UACTC,IAAK,OAGQ,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOH,EAAP,KAAgBK,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOF,EAAP,KAAYK,EAAZ,KAkBMC,EAAmB,WACvB,OAAOR,EAAOC,EAAUC,GASpBO,EAAcD,IAAqB,EAEzC,OACE,eAACV,EAAD,WACE,cAACxB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAASgC,OAAOC,KAAKZ,GACrBpB,gBAjCwB,SAAAiC,GAC9B,OAAQA,GACN,KAAKb,EAAcG,IACjBK,EAAOL,EAAM,GACb,MACF,KAAKH,EAAcE,QACjBK,EAAWL,EAAU,GACrB,MACF,KAAKF,EAAcC,KACjBK,EAAQL,EAAO,GACf,MACF,QACE,OAAO,WAyBT,cAAC1B,EAAD,CAASC,MAAM,aAAf,SACGkC,EACC,cAACnB,EAAD,CACEU,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLW,MAAOL,IACPM,mBAxBoB,WAC5B,IAAMD,EAAQL,IAEd,OAAiB,IAAVK,EAAA,UAAiBE,KAAKC,MAAOhB,EAAOa,EAAS,KAA7C,UAqBqBI,KAGtB,cAACrB,EAAD,CAAcC,KAAK,2BCzD7BqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MCVJ,CACbC,OAAQ,CACNC,MAAO,YDQP,SACE,cAACpB,EAAD,QAGJqB,SAASC,eAAe,W","file":"static/js/main.ec94d4ea.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const StyledSection = styled.section`\n  padding: 24px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 24px;\n  font-size: 36px;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledSection, Title } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <StyledSection>\n      {title && <Title>{title}</Title>}\n      {children}\n    </StyledSection>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { Row, Col } from 'antd';\nimport { Button } from 'antd';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <Row gutter={16}>\n      {options.map(btn => (\n        <Col key={`${btn}-btn`} className=\"gutter-row\" span={3}>\n          <Button  block onClick={() => onLeaveFeedback(btn)}>\n            {btn}\n          </Button>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n","export const columns = [\n  {\n    title: 'Good',\n    dataIndex: 'good',\n    key: 'good',\n  },\n  {\n    title: 'Neutral',\n    dataIndex: 'neutral',\n    key: 'neutral',\n  },\n  {\n    title: 'Bad',\n    dataIndex: 'bad',\n    key: 'bad',\n  },\n  {\n    title: 'Total',\n    dataIndex: 'total',\n    key: 'total',\n  },\n  {\n    title: 'Positive feedback',\n    dataIndex: 'positivePercentage',\n    key: 'positivePercentage',\n  },\n];\n","import PropTypes from 'prop-types';\n\nimport { Table } from 'antd';\nimport { Row, Col } from 'antd';\n\nimport { columns } from './tableColumns';\n\nexport default function Statistics(props) {\n  const data = [\n    {\n      key: '1',\n      ...props,\n    },\n  ];\n\n  return (\n    <Row>\n      <Col span={6}>\n        <Table\n          columns={columns}\n          dataSource={data}\n          pagination={false}\n          bordered\n        />\n      </Col>\n    </Row>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","export default function Notification({ text }) {\n  return <p>{text}</p>;\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  max-width: 1140px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n","import React, { useState } from 'react';\n\nimport Section from 'components/Section';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\nimport Notification from 'components/Notification';\nimport { Container } from './App.styled';\n\nconst buttonsOption = {\n  good: 'good',\n  neutral: 'neutral',\n  bad: 'bad',\n};\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrementFeedback = name => {\n    switch (name) {\n      case buttonsOption.bad:\n        setBad(bad + 1);\n        break;\n      case buttonsOption.neutral:\n        setNeutral(neutral + 1);\n        break;\n      case buttonsOption.good:\n        setGood(good + 1);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const getTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const getPositivePercentage = () => {\n    const total = getTotalFeedback();\n\n    return total !== 0 ? `${Math.round((good / total) * 100)}%` : `0%`;\n  };\n\n  const isFeedbacks = getTotalFeedback() > 0;\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(buttonsOption)}\n          onLeaveFeedback={handleIncrementFeedback}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {isFeedbacks ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={getTotalFeedback()}\n            positivePercentage={getPositivePercentage()}\n          />\n        ) : (\n          <Notification text=\"No feedback given\" />\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\n\nimport theme from './theme';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  colors: {\n    black: '#000000',\n  },\n};\n"],"sourceRoot":""}